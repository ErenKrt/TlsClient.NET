name: Publish to NuGET

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  publish:
    name: 'Build & Pack & Publish'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Extract version from tag
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/tags/v})" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Read tls-client version
        run: |
          if [ -f "./tls-client-version.txt" ]; then
            TLS_VERSION=$(cat ./tls-client-version.txt)
            echo "TLS_VERSION=${TLS_VERSION}" >> $GITHUB_ENV
            echo "Using tls-client version: ${TLS_VERSION}"
          else
            echo "ERROR: tls-client-version.txt file not found!"
            echo "Please run the version check workflow first to create this file."
            exit 1
          fi

      - name: Download tls-client files
        run: |
          mkdir -p external/tls-client
          # First download the release asset list
          assets=$(gh release view ${TLS_VERSION} --repo bogdanfinn/tls-client --json assets -q '.assets[].name' | grep "tls-client-" | grep -v "xgo")
          # Download each matching asset
          for asset in $assets; do
            gh release download ${TLS_VERSION} --repo bogdanfinn/tls-client --pattern "$asset" --dir external/tls-client
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy to project folder
        run: |
          mkdir -p src/TlsClient.Core/runtimes
          # Clean the destination directory first
          rm -f src/TlsClient.Core/runtimes/*

          # Copy files while replacing version with "latest"
          for file in external/tls-client/tls-client-*; do
            filename=$(basename "$file")
            # Replace version number (like 1.9.1) with "latest"
            newname=$(echo "$filename" | sed -E 's/([0-9]+\.[0-9]+\.[0-9]+)/latest/g')
            cp "$file" "src/TlsClient.Core/runtimes/$newname"
          done

      - name: Show copied files
        run: |
          echo "Contents of src/TlsClient.Core/runtimes directory:"
          ls -la src/TlsClient.Core/runtimes

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${VERSION} --output .

      - name: Push TlsClient
        run: dotnet nuget push TlsClient.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

      - name: Push TlsClient.RestSharp
        run: dotnet nuget push TlsClient.RestSharp.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

      - name: Push TlsClient.HttpClient
        run: dotnet nuget push TlsClient.HttpClient.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}